import configparser
import os

import alembic.command as ac
from alembic.config import Config


# Resolves local and absolute references to alembic.ini
def _path_resolver(path=None):
    if path is None or path == "alembic.ini":
        path = "alembic.ini"
    else:
        path = os.path.abspath(path)

    if os.path.exists(path):
        return path

    print(f"Invalid path {path}")
    return None


# Sets the sqlalchemy.url in alembic.ini
def alembic_engine(engine, path=None, resolution=True):
    if resolution:
        path = _path_resolver(path)

    if path is not None:
        engine_url = str(engine.url)
        config = configparser.ConfigParser()
        config.read(path)
        config.set("alembic", "sqlalchemy.url", engine_url)
        with open(path, "w", encoding="utf-8") as file:
            config.write(file)


# Creates autogenerated revisions and upgrades the database
def alembic_revision(engine, path=None, resolution=True):
    if resolution:
        path = _path_resolver(path)

    if path is not None:
        alembic_engine(engine, path)
        alembic_config = Config(path)
        ac.revision(alembic_config, autogenerate=True)
        ac.upgrade(alembic_config, revision="heads")


# Resolves path and calls alembic_engine and alembic_revision
def alembic_suite(engine, path=None):
    path = _path_resolver(path)
    if path is not None:
        alembic_engine(engine, path, False)
        alembic_revision(engine, path, False)
